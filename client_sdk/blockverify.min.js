/**
 * BlockVerify Client SDK v2.0.0 - Minified Production Version
 * Privacy-preserving age verification for websites
 * https://blockverify.com
 */
!function(e){"use strict";const t="2.0.0",n="https://api.blockverify.com",r="https://verify.blockverify.com",o="blockverify_token",i="blockverify_session";function a(t,n,...r){e.BlockVerify?.config?.debug&&console[t](`[BlockVerify SDK v${version}]`,n,...r)}class s extends Error{constructor(e,t,n={}){super(t),this.name="BlockVerifyError",this.code=e,this.details=n}}class c extends s{constructor(e,t,n){super("NETWORK_ERROR",e),this.status=t,this.response=n}}class l extends s{constructor(e){super("CONFIG_ERROR",e)}}class u extends s{constructor(e,t){super("VERIFICATION_ERROR",e),this.reason=t}}class d{static setToken(e){try{localStorage.setItem(o,e),sessionStorage.setItem(i,e),a("info","Token stored successfully")}catch(e){a("warn","Failed to store token:",e)}}static getToken(){return localStorage.getItem(o)||sessionStorage.getItem(i)}static clearToken(){try{localStorage.removeItem(o),sessionStorage.removeItem(i),a("info","Token cleared")}catch(e){a("warn","Failed to clear token:",e)}}static isTokenValid(e){if(!e)return!1;try{const t=e.split(".");if(3===t.length){let n=t[1];n=n.replace(/-/g,"+").replace(/_/g,"/"),n+="=".repeat((4-n.length%4)%4);const r=JSON.parse(atob(n));return!(r.exp&&r.exp<Date.now()/1e3)||(a("info","JWT token expired"),!1)}const n=JSON.parse(atob(e));return!(n.exp&&n.exp<Date.now()/1e3)||(a("info","Legacy token expired"),!1)}catch(e){return a("warn","Invalid token format:",e),!1}}}class f{constructor(e){this.config=e,this.baseURL=e.apiUrl||n}async verifyToken(e,t=18){const n=`${this.baseURL}/v1/verify-token`;a("info","Verifying token with API...");try{const r=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`,"User-Agent":`BlockVerify-SDK/${version}`,"X-SDK-Version":version},body:JSON.stringify({token:e,min_age:t,user_agent:navigator.userAgent})});if(!r.ok){const e=await r.json().catch(()=>({}));throw new c(e.message||`API request failed with status ${r.status}`,r.status,e)}const o=await r.json();return a("info","Token verification result:",o),o}catch(e){if(e instanceof c)throw e;throw a("error","Network error during token verification:",e),new c("Failed to verify token - network error",0,e)}}async getRateLimitInfo(){const e=`${this.baseURL}/v1/rate-limit-info`;try{const t=await fetch(e,{headers:{Authorization:`Bearer ${this.config.apiKey}`}});if(t.ok)return await t.json()}catch(e){a("warn","Failed to get rate limit info:",e)}return null}}class h{static createModal(){const e=document.getElementById("blockverify-modal");e&&e.remove();const t=document.createElement("div");t.id="blockverify-modal",t.innerHTML=`<div class="blockverify-overlay"><div class="blockverify-modal"><div class="blockverify-header"><h2>üîê Age Verification Required</h2><p>This site requires age verification to continue</p></div><div class="blockverify-content"><div class="blockverify-info"><div class="blockverify-feature"><span class="blockverify-icon">üõ°Ô∏è</span><div><strong>Privacy Protected</strong><p>No personal data stored on this site</p></div></div><div class="blockverify-feature"><span class="blockverify-icon">‚ö°</span><div><strong>One-Time Setup</strong><p>Verify once, access everywhere</p></div></div><div class="blockverify-feature"><span class="blockverify-icon">üîó</span><div><strong>Blockchain Secured</strong><p>Cryptographically verified identity</p></div></div></div><div class="blockverify-actions"><button id="blockverify-verify-btn" class="blockverify-btn-primary">Verify My Age</button><button id="blockverify-cancel-btn" class="blockverify-btn-secondary">Leave Site</button></div></div><div class="blockverify-footer"><p>Powered by <a href="https://blockverify.com" target="_blank">BlockVerify</a></p></div></div></div>`;const n=document.createElement("style");return n.textContent="#blockverify-modal{position:fixed;top:0;left:0;width:100%;height:100%;z-index:999999;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif}.blockverify-overlay{position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,.8);backdrop-filter:blur(8px);display:flex;align-items:center;justify-content:center;padding:20px;box-sizing:border-box}.blockverify-modal{background:white;border-radius:16px;max-width:480px;width:100%;box-shadow:0 20px 40px rgba(0,0,0,.3);overflow:hidden;animation:blockverify-modal-in .3s ease-out}@keyframes blockverify-modal-in{from{opacity:0;transform:scale(.9) translateY(20px)}to{opacity:1;transform:scale(1) translateY(0)}}.blockverify-header{background:linear-gradient(135deg,#667eea 0%,#764ba2 100%);color:white;padding:24px;text-align:center}.blockverify-header h2{margin:0 0 8px 0;font-size:24px;font-weight:600}.blockverify-header p{margin:0;opacity:.9;font-size:14px}.blockverify-content{padding:24px}.blockverify-info{margin-bottom:24px}.blockverify-feature{display:flex;align-items:center;margin-bottom:16px}.blockverify-icon{font-size:24px;margin-right:12px;width:32px;text-align:center}.blockverify-feature strong{display:block;font-size:14px;font-weight:600;color:#333;margin-bottom:2px}.blockverify-feature p{margin:0;font-size:12px;color:#666}.blockverify-actions{display:flex;gap:12px;flex-direction:column}.blockverify-btn-primary{background:linear-gradient(135deg,#667eea 0%,#764ba2 100%);color:white;border:none;padding:14px 24px;border-radius:8px;font-size:16px;font-weight:600;cursor:pointer;transition:transform .2s,box-shadow .2s}.blockverify-btn-primary:hover{transform:translateY(-1px);box-shadow:0 4px 12px rgba(102,126,234,.4)}.blockverify-btn-secondary{background:transparent;color:#666;border:2px solid #ddd;padding:12px 24px;border-radius:8px;font-size:14px;cursor:pointer;transition:border-color .2s,color .2s}.blockverify-btn-secondary:hover{border-color:#bbb;color:#333}.blockverify-footer{background:#f8f9fa;padding:16px 24px;text-align:center;border-top:1px solid #eee}.blockverify-footer p{margin:0;font-size:12px;color:#666}.blockverify-footer a{color:#667eea;text-decoration:none;font-weight:500}.blockverify-footer a:hover{text-decoration:underline}@media (max-width:480px){.blockverify-modal{margin:10px;max-width:none}.blockverify-actions{flex-direction:column}}",document.head.appendChild(n),document.body.appendChild(t),t}static showModal(e){const t=h.createModal(),n=t.querySelector("#blockverify-verify-btn"),o=t.querySelector("#blockverify-cancel-btn");return n.addEventListener("click",()=>{const n=`${e.verificationUrl||r}?`+new URLSearchParams({origin:window.location.origin,redirect:window.location.href,sdk_version:version});a("info","Redirecting to verification:",n),window.location.href=n}),o.addEventListener("click",()=>{e.onCancel?e.onCancel():history.back()}),t.querySelector(".blockverify-overlay").addEventListener("click",t=>{t.target===t.currentTarget&&e.allowDismiss&&h.hideModal()}),t}static hideModal(){const e=document.getElementById("blockverify-modal");e&&(e.style.animation="blockverify-modal-out 0.2s ease-in forwards",setTimeout(()=>e.remove(),200))}}class v{constructor(){this.config={},this.apiClient=null,this.initialized=!1}init(e={}){if(!e.apiKey)throw new l("API key is required");if(!e.apiKey.startsWith("bv_"))throw new l("Invalid API key format");return this.config={apiKey:e.apiKey,minAge:e.minAge||18,autoVerify:!1!==e.autoVerify,debug:e.debug||!1,verificationUrl:e.verificationUrl,apiUrl:e.apiUrl,onSuccess:e.onSuccess,onFailure:e.onFailure,onCancel:e.onCancel,allowDismiss:e.allowDismiss||!1},this.apiClient=new f(this.config),this.initialized=!0,a("info","BlockVerify SDK initialized",{minAge:this.config.minAge,autoVerify:this.config.autoVerify}),this.config.autoVerify&&this.checkAge(),this}async checkAge(){if(!this.initialized)throw new l("SDK not initialized. Call BlockVerify.init() first.");a("info","Starting age verification check...");try{const e=d.getToken();if(e&&d.isTokenValid(e)){a("info","Found valid token, verifying with API...");const t=await this.apiClient.verifyToken(e,this.config.minAge);if(t.valid)return a("info","Age verification successful"),this.config.onSuccess&&this.config.onSuccess(t),{verified:!0,result:t};a("warn","Token verification failed:",t.metadata?.reason),d.clearToken()}else e&&(a("info","Found expired/invalid token, clearing..."),d.clearToken());const t=new URLSearchParams(window.location.search);if("true"===t.get("blockverify_verified")){a("info","Returned from verification, checking for new token..."),await new Promise(e=>setTimeout(e,1e3));const t=d.getToken();if(t&&d.isTokenValid(t)){const e=await this.apiClient.verifyToken(t,this.config.minAge);if(e.valid){const t=new URL(window.location);return t.searchParams.delete("blockverify_verified"),window.history.replaceState({},"",(t)),this.config.onSuccess&&this.config.onSuccess(e),{verified:!0,result:e}}}}return a("info","No valid token found, showing verification prompt"),this.showVerificationPrompt(),this.config.onFailure&&this.config.onFailure(new u("Age verification required","no_token")),{verified:!1,reason:"verification_required"}}catch(e){return a("error","Age verification error:",e),this.config.onFailure&&this.config.onFailure(e),this.showVerificationPrompt(),{verified:!1,error:e.message}}}showVerificationPrompt(){h.showModal(this.config)}hideVerificationPrompt(){h.hideModal()}clearToken(){d.clearToken(),a("info","Token cleared manually")}async getStatus(){if(!this.initialized)return{initialized:!1};const e=d.getToken(),t=await this.apiClient.getRateLimitInfo();return{initialized:!0,hasToken:!!e,tokenValid:!!e&&d.isTokenValid(e),config:{minAge:this.config.minAge,autoVerify:this.config.autoVerify},rateLimitInfo:t}}}const g=new v;e.BlockVerify=g,e.blockverifyConfig&&g.init(e.blockverifyConfig),e.addEventListener("message",e=>{e.origin===r.replace("/verify","")&&"BLOCKVERIFY_TOKEN"===e.data.type&&(d.setToken(e.data.token),a("info","Token received via postMessage"),g.initialized&&g.checkAge())}),a("info","BlockVerify SDK loaded")}(window); 